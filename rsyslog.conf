global(processInternalMessages="on" AbortOnUncleanConfig="on")


# create stats from rsyslog - for Prometehus at a later stage 
module(load="impstats")

# Socket input
module(load="imuxsock")

# stdout output
module(load="omstdout")

# HTTP Output
module(load="omhttp")

# UTF8 Fix - if UTF8 chars are sent, replace with a "?"
 module(load="mmutf8fix")
# Add this to ruleset if needed - action(type="mmutf8fix" replacementChar="?")



input(
    type="imuxsock"
    Socket="/mounted/log.socket"
    ruleset="socket_to_stdout"
)


template(name="loki" type="string" string="{\"stream\":{\"host\":\"%HOSTNAME%\",\"facility\":\"%syslogfacility-text%\",\"priority\":\"%syslogpriority-text%\",\"syslogtag\":\"%syslogtag%\"},\"values\": [[ \"%timegenerated:::date-unixtimestamp%000000000\", \"%msg%\" ]]}")



ruleset(name="socket_to_stdout") {
    action(type="omstdout")    
}

ruleset(name="loki_memory") {
    action(
       name="loki"
       type="omhttp"
       useHttps="off"
       server="loki"
       serverport="3100"
       checkpath="ready"
       restpath="loki/api/v1/push"
       template="loki"
       batch.format="lokirest"
       batch="on"
       batch.maxsize="10"
       queue.size="10000"
       queue.type="linkedlist"
       queue.workerthreads="4"
       queue.workerthreadMinimumMessages="1000"
       queue.timeoutWorkerthreadShutdown="500"
    )
}

